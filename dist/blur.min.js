const blurElements=document.querySelectorAll(".blur");let styleElement=document.getElementById("blur-styles");styleElement||(styleElement=document.createElement("style"),styleElement.id="blur-styles",document.head.appendChild(styleElement));const blurVersion=document.body.getAttribute("blur-version");blurVersion&&console.log(`BlurJS version ${blurVersion} is running.`),blurElements.forEach((e=>{const t="blur-"+Math.random().toString(36).substring(2,6);e.setAttribute("blur-id",t);let r={position:"absolute",background:"red",borderRadius:"5rem 2rem 5rem 50%",width:"50px",height:"50px",zIndex:"99",filter:"blur(25px)"};const s={"blur-width":"width","blur-height":"height","blur-background":"background","blur-z-index":"zIndex","blur-top":"top","blur-left":"left","blur-right":"right","blur-bottom":"bottom","blur-border-radius":"borderRadius"};for(const t in s)e.hasAttribute(t)&&(r[s[t]]=e.getAttribute(t));if(e.hasAttribute("blur-amount")&&(r.filter=`blur(${e.getAttribute("blur-amount")})`),e.hasAttribute("blur-custom")){e.getAttribute("blur-custom").split(";").forEach((e=>{if(e.trim()){const[t,s]=e.split(":");if(t&&s){const e=t.trim().replace(/-(\w)/g,((e,t)=>t.toUpperCase()));r[e]=s.trim()}}}))}let l="";for(const e in r)l+=`${e.replace(/([A-Z])/g,"-$1").toLowerCase()}: ${r[e]}; `;e.style.cssText=l,"true"===e.getAttribute("blur-grain")&&(e.style.background+=", url(\"data:image/svg+xml,%3Csvg viewBox='0 0 250 250' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='noiseFilter'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='0.65' numOctaves='3' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23noiseFilter)'/%3E%3C/svg%3E\")");const n=e.getAttribute("blur-pointer-events");"true"===n?e.style.pointerEvents="all":"false"===n&&(e.style.pointerEvents="none");const i=e.getAttribute("blur-user-select");if("true"===i||"false"===i){const t="true"===i?"auto":"none";e.style.userSelect=t,e.style.webkitUserSelect=t,e.style.MozUserSelect=t,e.style.msUserSelect=t}let a=[];["scale","translate-x","translate-y","opacity","animate"].forEach((r=>{const s=`blur-${r}`;if(e.hasAttribute(s)){const l=e.getAttribute(s),n=e.getAttribute(`${s}-duration`)||"1s",i=e.getAttribute(`${s}-repetitions`)||"infinite",o=e.getAttribute(`${s}-timing`)||"linear",u=`${r}Animation${t}`;a.push(`${u} ${n} ${o} ${i}`);let c="";switch(r){case"scale":e.style.transformOrigin="center",c=`@keyframes ${u} { 50% { transform: scale(${l}); } }`;break;case"translate-x":c=`@keyframes ${u} { 50% { transform: translateX(${l}); } }`;break;case"translate-y":c=`@keyframes ${u} { 50% { transform: translateY(${l}); } }`;break;case"opacity":c=`@keyframes ${u} { 50% { opacity: ${l}; } }`;break;case"animate":c=`@keyframes ${u} { 50% { filter: blur(${l}); } }`}c&&styleElement.sheet.insertRule(c,styleElement.sheet.cssRules.length)}})),a.length>0&&(e.style.animation=a.join(", "));const o=e.getAttribute("blur-interaction");if(o){e.style.animationPlayState="paused";const t=(t,r,s)=>{e.addEventListener(r,(()=>e.style.animationPlayState="running")),s&&e.addEventListener(s,(()=>e.style.animationPlayState="paused"))};switch(o){case"hover":t("hover","mouseenter","mouseleave");break;case"click":e.addEventListener("click",(()=>{e.style.animationPlayState="paused"===e.style.animationPlayState?"running":"paused"}));break;case"scroll":new IntersectionObserver((t=>{t.forEach((t=>{e.style.animationPlayState=t.isIntersecting?"running":"paused"}))})).observe(e)}}}));
